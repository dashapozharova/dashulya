import telebot 
 
# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ 
bot = telebot.TeleBot('token') 
 
# –°–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –¥–ª—è –∏–≥—Ä—ã 
field = ['ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç']
current_player = '‚≠ï'  
game_over = False
 
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
def display_board():
    message = ''
    for row in field:
        message += ' '.join(row) + '\n'
    return message

def restart_game(chat_id):
    global field, current_player, game_over
    field = ['ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç', 'ü§ç']
    current_player = '‚≠ï'
    game_over = False
    bot.send_message(chat_id, "–ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!")
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9 \n –•–æ–¥ –∏–≥—Ä–æ–∫–∞ ‚≠ï")
    draw_field(chat_id)

def check_winner(chat_id):
    global field, game_over
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
    win_combinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]]
    for combination in win_combinations:
        if field[combination[0]] == field[combination[1]] == field[combination[2]] != 'ü§ç':
            bot.send_message(chat_id, f"–ò–≥—Ä–æ–∫ {field[combination[0]]} –≤—ã–∏–≥—Ä–∞–ª! ü•≥ü•≥")
            game_over = True
            bot.send_message(chat_id, "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑? –í–≤–µ–¥–∏—Ç–µ –¥–∞ –∏–ª–∏ –Ω–µ—Ç")
            return
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∏—á—å—é
    if 'ü§ç' not in field:
        bot.send_message(chat_id, "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –ù–∏—á—å—è!")
        game_over = True
        bot.send_message(chat_id, "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë —Ä–∞–∑? –í–≤–µ–¥–∏—Ç–µ –¥–∞ –∏–ª–∏ –Ω–µ—Ç")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    start_button = telebot.types.KeyboardButton('–°—Ç–∞—Ä—Ç')
    rules_button = telebot.types.KeyboardButton('–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã')
    markup.row(start_button, rules_button)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É "–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏"! –ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç" –∏–ª–∏ "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"', reply_markup=markup)
    
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /rules
@bot.message_handler(commands=['rules'])
def handle_rules(message):
    rules = 'üîò –ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã "–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏" ‚ùå/‚≠ï:\n\n' \
            'üîò –ò–≥—Ä–æ–∫–∏ –ø–æ –æ—á–µ—Ä–µ–¥–∏ —Å—Ç–∞–≤—è—Ç —Å–≤–æ–∏ —Å–∏–º–≤–æ–ª—ã –Ω–∞ —Å–≤–æ–±–æ–¥–Ω—ã–µ –∫–ª–µ—Ç–∫–∏ –ø–æ–ª—è 3x3, –≤–≤–æ–¥—è —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 9.\n\n' \
            'üîò –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –≤—ã–≥–ª—è–¥–∏—Ç —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: \n' \
            '   1  2  3       ü§çü§çü§ç\n' \
            '   4  5  6   =  ü§çü§çü§ç\n' \
            '   7  8  9       ü§çü§çü§ç\n' \
            'üîò –¢–æ–ª—å–∫–æ –≤–º–µ—Å—Ç–æ —á–∏—Å–µ–ª - ü§ç (–ø—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞) \n\n' \
            'üîò –ü–µ—Ä–≤—ã–π, –≤—ã—Å—Ç—Ä–æ–∏–≤—à–∏–π –≤ —Ä—è–¥ (–ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏–ª–∏ –¥–∏–∞–≥–æ–Ω–∞–ª–∏) —Ç—Ä–∏ —Å–≤–æ–∏—Ö —Å–∏–º–≤–æ–ª–∞, –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç ü•≥\n\n' \
            'üîò –ï—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏ –Ω–∏ –æ–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª, –∏–≥—Ä–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∏—á—å–µ–π.\n \n' 
            
    bot.send_message(message.chat.id, rules)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç"
@bot.message_handler(func=lambda message: message.text == '–°—Ç–∞—Ä—Ç')
def handle_start_button(message):
    markup = telebot.types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, '–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9 \n' '–•–æ–¥ –∏–≥—Ä–æ–∫–∞ ‚≠ï', reply_markup=markup)    
    draw_field(message.chat.id)  # –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—è

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã"
@bot.message_handler(func=lambda message: message.text == '–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã')
def handle_rules_button(message):
    handle_rules(message)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_text(message):
    global field, current_player, game_over
    if message.text == '–¥–∞' and game_over:
        restart_game(message.chat.id)
    elif message.text == '–Ω–µ—Ç' and game_over:
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!üòâ")
    elif message.text.isdigit() and 1 <= int(message.text) <= 9 and not game_over:
        cell_number = int(message.text) - 1
        if field[cell_number] == 'ü§ç':
            field[cell_number] = current_player
            if current_player == '‚≠ï':
                current_player = '‚ùå'
            else:
                current_player = '‚≠ï'
            bot.send_message(message.chat.id, f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞ {current_player}")
            draw_field(message.chat.id)
            check_winner(message.chat.id)
        else:
            bot.send_message(message.chat.id, "–Ø—á–µ–π–∫–∞ —É–∂–µ –∑–∞–Ω—è—Ç–∞. –°–¥–µ–ª–∞–π—Ç–µ –¥—Ä—É–≥–æ–π —Ö–æ–¥.")
    elif not game_over:
        bot.send_message(message.chat.id, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ö–æ–¥. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9.")

def draw_field(chat_id):
    global field
    field_str = ' '.join(field[:3]) + '\n' + ' '.join(field[3:6]) + '\n' + ' '.join(field[6:])
    bot.send_message(chat_id, field_str)

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ 
bot.polling()
